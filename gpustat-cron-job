#!/usr/bin/perl -w
#
## Check available GPUs. Combine with ROOT cronjob, so regular users can get this GPU info too, so to better plan to run GPU jobs.
#
use File::Basename;

# First let's get the temporature of the GPUs of sll nodes:
#
#sorted already, so the first imte of a node is the hotest one.
#
my $gpunodes="gpu0[01-07]";  #CHANGE IT ACCORDING TO YOUR ENV
#
#
my $username=`whoami`;
chomp($username);
##print "User: ", $gpunodes;
my @gpuinfo;
if ($username eq 'root'   ){
    @gpuinfo=`pdsh -w $gpunodes nvidia-smi   --query-gpu=gpu_name,gpu_bus_id,temperature.gpu,memory.used,utilization.gpu,utilization.memory --format=csv,noheader|awk -F "," '{split(\$1,node,":"); split(\$5,gpu,"%");split(\$4,gmem,"MiB"); print node[1]";"\$3";"gpu[1]";"gmem[1]  / 1437.71}' |sort  -k1 `;;  
  # Use mem.used, 1437.71, H200 memory
    #@gpuinfo=`pdsh -w $gpunodes nvidia-smi   --query-gpu=gpu_name,gpu_bus_id,temperature.gpu,memory.used,utilization.gpu,utilization.memory --format=csv,noheader|awk -F "," '{split(\$1,node,":"); split(\$5,gpu,"%");split(\$6,gmem,"%"); print node[1]";"\$3";"gpu[1]";"gmem[1]}' |sort  -k1 `;;
}else {
   print "Work as user: $username. Get the average during the last 2 minutes\n";
   #
   #  Please set a cron job running as root, like every 2 minutes, and write the coutput to a shared folder:
   #  */2 * * * * /storage/shared/examples/gpustat > /storage/shared/examples/gpustatus/gpu.log
   #
   @content=`cat /storage/shared/gpustatus/gpu.log`;
   print @content;
   exit(0); 
   #@gpuinfo=("node00;0");
}
# You may need absolute path for the comand 
my @nodes=`sinfo -a --Node -o "%.10N %8O %c %.10m %.10e  %.6t  %G"|uniq|grep -v -e down|grep gpu`;;
#
printf("     NODE   GPU\%%  GMEM\%%  TEMP  LOAD     CPUS    MEMORY(GB)   STATE     GRES\n");

foreach $node (@nodes)
{
  my $found=0;
  chomp($node);
  $node=' '.$node;

  my @vals=split(/\s+/,$node);
  #
  #$node, $load, $cpus, $memtot,$memfree,$state,$gres
  if ($vals[4] eq "N/A") {
      $vals[4]=0;
  }
  if ($vals[5] eq "N/A") {
      $vals[5]=0;
  }
  if ($vals[2] eq "N/A") {
      $vals[2]=0;
  }


  $vals[4]=int($vals[4]/1000); #Convert from MB to GB
  $vals[5]=int($vals[5]/1000); #Convert from MB to GB

  #
  my @computes=`/cm/shared/apps/slurm/current/bin/scontrol show node $vals[1]|grep AllocTRES`;;
  #print join("",@computes);
  foreach $comp (@computes)
  {
    chomp($comp);
    #printf("kaka %s \n",$comp);
    my @alloc=split(/AllocTRES=/,$comp);
    #printf(" wawa %10s \n",$alloc[1]);
    my @res=(0,0); my @cpu=(0,0); my @mem=(0,0);my @gpu=(0,0);
    #Now get the hotest GPU's temporature
    my $temp = 0; my $memalloc=0;
    #my $temp =`pdsh -w $vals[1] nvidia-smi   --query-gpu=gpu_name,gpu_bus_id,temperature.gpu,memory.used,utilization.gpu,utilization.memory --format=csv,noheader|awk -F "," '{print \$3}'|sort|tail -1`;
    chomp($temp);
    if (defined $alloc[1] and length $alloc[1]){

       @res=split(/,/,$alloc[1]);
       @cpu=split(/=/,$res[0]);
       @mem=split(/=/,$res[1]);
       if(index($mem[1], "M") != -1) {
          chop($mem[1]); #remove trailing M char.
          $memalloc = int($mem[1]/1000);#convert from MB to GB.
       }	  
       elsif (index($mem[1], "G") != -1) {
           chop($mem[1]); #remove trailing G char.
           $memalloc = int($mem[1]);
       }
       if (defined $res[2] and length $res[2]) { @gpu=split(/=/,$res[2]);};
    }
    $gusg=0.; $gram=0.;
    foreach $line  (@gpuinfo)
    {
      if(defined $line and length $line){	 
        my @gtemp=split(/;/,$line); # nodename, temporature, GUSG,GRAM  %
        if ($gtemp[0] eq $vals[1]){
          $temp=$gtemp[1]; # sorted, the last one is the hotest GPU
	  chomp($temp);
	  #last;
          $gusg=$gusg + $gtemp[2];
	  $gram=$gram + $gtemp[3];
       }
      }
    }
    if($gpu[1] > 0){  # direct ssh user?
	# $gpu[1]=0.01;
        $gusg=$gusg/$gpu[1];
	#$gram=$gram/$gpu[1];
    }
    #    printf("%10s %6.2f %5d/%2d   %3s/%3s/%3s %6s %3s/%-22s  %3s %5d %5d\n",$vals[1],$vals[2],$cpu[1],$vals[3],$memalloc,$vals[5],$vals[4],$vals[6],$gpu[1],$vals[7],$temp,$gusg,$gram)
    printf("%10s  %3d %4d  %6s %6.2f %5d/%3d   %3s/%3s/%4s %6s %3s/%-22s\n",$vals[1],$gusg,$gram,$temp,$vals[2],$cpu[1],$vals[3],$memalloc,$vals[5],$vals[4],$vals[6],$gpu[1],$vals[7])

  }
}
printf("GPU\%%: GPU average usage on all GPUs \n");
printf("GMEM\%%: GPU vRAM average usage on all GPUs \n");
printf("TEMP: celsius degree. Temporature of the hotest GPUs \n");
printf("Load: CPU average usage on all CPUs \n");
printf("CPUS: lists allocated/total CPU cores. \n");
printf("MEMORY(GB): lists allocated/free/total memory in GB. \n");
printf("GRES: lists allocated/total GPUs. \n");
